Name:           ros-kinetic-hironx-ros-bridge
Version:        2.1.0
Release:        0%{?dist}
Summary:        ROS hironx_ros_bridge package

Group:          Development/Libraries
License:        BSD
URL:            http://ros.org/wiki/hironx_ros_bridge
Source0:        %{name}-%{version}.tar.gz

Requires:       gnuplot
Requires:       ros-kinetic-control-msgs
Requires:       ros-kinetic-hrpsys-ros-bridge
Requires:       ros-kinetic-moveit-commander
Requires:       ros-kinetic-openni2-launch
Requires:       ros-kinetic-rosbash
Requires:       ros-kinetic-roslang
Requires:       ros-kinetic-roslib
Requires:       ros-kinetic-rospy
Requires:       ros-kinetic-tf
BuildRequires:  gnuplot
BuildRequires:  ros-kinetic-catkin
BuildRequires:  ros-kinetic-control-msgs
BuildRequires:  ros-kinetic-hrpsys-ros-bridge
BuildRequires:  ros-kinetic-mk
BuildRequires:  ros-kinetic-rosbash
BuildRequires:  ros-kinetic-rosbuild
BuildRequires:  ros-kinetic-roslang
BuildRequires:  ros-kinetic-roslib
BuildRequires:  ros-kinetic-roslint
BuildRequires:  unzip

%description
ROS-OpenRTM interfacing package for the opensource version of Kawada's
Hiro/NEXTAGE dual-arm robot. NOTE: This package is multi-license -- pay
attention to file header in each file where license is declared. For Creative
Commons nc 4.0 applied, see here. This package also contains some sensor driver
software (as of April 2016 they are the following force sensors such as Dynpick
and JR3) for QNX. These drivers are stored in this robot-specific package for
not many reasons than they are slightly customized for the robot. So if you can
separate those as a standalone, generic package that'll be appreciated (please
just let us know if you will).

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kinetic/setup.sh" ]; then . "/opt/ros/kinetic/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_LIBDIR="lib" \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/kinetic" \
        -DCMAKE_PREFIX_PATH="/opt/ros/kinetic" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kinetic/setup.sh" ]; then . "/opt/ros/kinetic/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/kinetic

%changelog
* Thu Sep 07 2017 Kei Okada <k-okada@jsk.t.u-tokyo.ac.jp> - 2.1.0-0
- Autogenerated by Bloom

* Thu Aug 10 2017 Kei Okada <k-okada@jsk.t.u-tokyo.ac.jp> - 2.0.0-0
- Autogenerated by Bloom

